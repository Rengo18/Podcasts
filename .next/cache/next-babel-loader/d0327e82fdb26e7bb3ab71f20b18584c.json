{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rengo\\\\desktop\\\\podcasts\\\\components\\\\ChannelGrid.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Link from 'next/link';\nexport default class ChannelGrid extends React.Component {\n  render() {\n    const {\n      channels\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"jsx-832685258\" + \" \" + \"channels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, channels.map(channel => React.createElement(Link, {\n      href: `/channel?id=${channel.id}`,\n      key: channel.id,\n      prefetch: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"jsx-832685258\" + \" \" + \"channel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: channel.urls.logo_image.original,\n      alt: \"Logo\",\n      className: \"jsx-832685258\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"jsx-832685258\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, channel.title)))), React.createElement(_JSXStyle, {\n      id: \"832685258\",\n      __self: this\n    }, \".channels.jsx-832685258{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}.channel.jsx-832685258{display:block;border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);margin-bottom:0.5em;-webkit-text-decoration:none;text-decoration:none;font-size:20px;}.channel.jsx-832685258 img.jsx-832685258{width:100%;}h2.jsx-832685258{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcUmVuZ29cXGRlc2t0b3BcXHBvZGNhc3RzXFxjb21wb25lbnRzXFxDaGFubmVsR3JpZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQndCLEFBTWlDLEFBTUMsQUFTSCxBQUdDLFdBRmYsQ0FHbUIsQ0FsQkYsQ0FNSSxhQUxMLENBa0JHLElBWnlCLFFBTGlCLElBa0JqRCxTQUNTLGtCQUNwQixDQWRzQixvQkFDQyxNQU54Qiw0Q0FPa0IsZUFDbEIiLCJmaWxlIjoiQzpcXFVzZXJzXFxSZW5nb1xcZGVza3RvcFxccG9kY2FzdHNcXGNvbXBvbmVudHNcXENoYW5uZWxHcmlkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJzsgXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENoYW5uZWxHcmlkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xyXG4gICAgcmVuZGVyKCl7XHJcbiAgICAgICAgY29uc3Qge2NoYW5uZWxzfT10aGlzLnByb3BzXHJcbiAgICAgICAgcmV0dXJuKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2hhbm5lbHNcIj5cclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5uZWxzLm1hcCgoY2hhbm5lbCkgPT4oXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPXtgL2NoYW5uZWw/aWQ9JHtjaGFubmVsLmlkfWB9IGtleT17Y2hhbm5lbC5pZH0gcHJlZmV0Y2g+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJjaGFubmVsXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2NoYW5uZWwudXJscy5sb2dvX2ltYWdlLm9yaWdpbmFsfSBhbHQ9XCJMb2dvXCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDI+e2NoYW5uZWwudGl0bGV9PC9oMj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz4gIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICApKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC5jaGFubmVsc3tcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmdyaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZ3JpZC1nYXA6MTVweDtcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOnJlcGVhdChhdXRvLWZpbGwsbWlubWF4KDE2MHB4LDFmcikpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLmNoYW5uZWwge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czozcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMHB4IDJweCA2cHggcmdiYSgwLDAsMCwwLjE1KTtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOjAuNWVtO1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToyMHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAuY2hhbm5lbCBpbWcge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBoMntcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjVweDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6MC45ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6NjAwO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowO1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xyXG4gICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBgfVxyXG4gICAgICAgICAgICA8L3N0eWxlPiAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIDwvZGl2PiAgIFxyXG4gICAgICAgIClcclxuICAgIH1cclxufSJdfQ== */\\n/*@ sourceURL=C:\\\\Users\\\\Rengo\\\\desktop\\\\podcasts\\\\components\\\\ChannelGrid.js */\"));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Rengo\\desktop\\podcasts\\components\\ChannelGrid.js"],"names":["Link","ChannelGrid","React","Component","render","channels","props","map","channel","id","urls","logo_image","original","title"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,eAAe,MAAMC,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAAyC;AACpDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKC,KAAtB;AACA,WACA;AAAA,yCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEgBD,QAAQ,CAACE,GAAT,CAAcC,OAAD,IACZ,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAG,eAAcA,OAAO,CAACC,EAAG,EAAtC;AAAyC,MAAA,GAAG,EAAED,OAAO,CAACC,EAAtD;AAA0D,MAAA,QAAQ,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA,yCAAa,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAED,OAAO,CAACE,IAAR,CAAaC,UAAb,CAAwBC,QAAlC;AAA4C,MAAA,GAAG,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,OAAO,CAACK,KAAb,CAFJ,CADH,CADD,CAFhB;AAAA;AAAA;AAAA,47GADA;AA+CH;;AAlDmD","sourcesContent":["import Link from 'next/link'; \r\nexport default class ChannelGrid extends React.Component{\r\n    render(){\r\n        const {channels}=this.props\r\n        return(\r\n        <div className=\"channels\">\r\n                    {\r\n                        channels.map((channel) =>(\r\n                         <Link href={`/channel?id=${channel.id}`} key={channel.id} prefetch>\r\n                            <a className=\"channel\">\r\n                                <img src={channel.urls.logo_image.original} alt=\"Logo\" />\r\n                                <h2>{channel.title}</h2>\r\n                            </a>\r\n                         </Link>  \r\n                        ))\r\n                    }\r\n            <style jsx>{`\r\n                \r\n                   \r\n                    \r\n                .channels{\r\n                    display:grid;\r\n                    grid-gap:15px;\r\n                    padding:15px;\r\n                    grid-template-columns:repeat(auto-fill,minmax(160px,1fr));\r\n                }\r\n                .channel {\r\n                    display:block;\r\n                    border-radius:3px;\r\n                    box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\r\n                    margin-bottom:0.5em;\r\n                    text-decoration:none;\r\n                    font-size:20px;\r\n                }\r\n                \r\n                .channel img {\r\n                    width:100%;\r\n                }\r\n                h2{\r\n                    padding:5px;\r\n                    font-size:0.9em;\r\n                    font-weight:600;\r\n                    margin:0;\r\n                    text-align:center;\r\n                 }\r\n\r\n                `}\r\n            </style>   \r\n        \r\n        </div>   \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}